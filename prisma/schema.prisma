generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Property {
  id             Int                   @id @default(autoincrement())
  createdAt      DateTime              @default(now())
  updatedAt      DateTime              @updatedAt
  title          String                @db.VarChar(255)
  propertyType   PropertyType?         @relation(fields: [propertyTypeId], references: [id])
  propertyTypeId Int
  description    String?
  city           String
  country        String
  bedrooms       Int
  beds           Int
  baths          Int?
  entirePlace    Boolean               @default(false)
  defaultImage   String?
  amenities      AmenitiesOnProperty[]
  host           User?                 @relation(fields: [hostId], references: [id])
  hostId         Int?
  reviews        Review[]
}

model Review {
  id                Int                 @id @default(autoincrement())
  comment           String
  rating            Int
  date              DateTime            @default(now())
  reviewer User @relation(fields:[reviewerId],references: [id])
  reviewerId Int
  property Property @relation(fields:[propertyId],references: [id])
  propertyId Int


}

model Amenity {
  id         Int                   @id @default(autoincrement())
  properties AmenitiesOnProperty[]
  name       String

  @@unique([name])
}

model AmenitiesOnProperty {
  amenity   Amenity   @relation(fields: [amenityId], references: [id])
  amenityId Int // relation scalar field (used in the `@relation` attribute above)
  property    Property? @relation(fields: [propertyId], references: [id])
  propertyId  Int // relation scalar field (used in the `@relation` attribute above)
  assignedAt  DateTime  @default(now())
  assignedBy  String?

  @@id([amenityId, propertyId])
}

model User {
  id         Int        @id @default(autoincrement())
  email      String     @unique
  firstName  String?
  lastName   String?
  profile    Profile?
  properties Property[]
  reviews Review[]
}

model Profile {
  id         Int     @id @default(autoincrement())
  bio        String?
  profilePic String?
  account        User    @relation(fields: [accountId], references: [email])
  accountId     String     @unique
  superHost  Boolean @default(false)
}


model PropertyType {
  id   Int        @id @default(autoincrement())
  name String     @db.VarChar(100)
  type Property[]

  @@unique([name])
}
